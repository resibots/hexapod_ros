dynamixel_controllers:
  joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50

  leg_0_controller:
    type: position_controllers/JointTrajectoryController
    joints:
      - body_leg_0
      - leg_0_1_2
      - leg_0_2_3

  leg_1_controller:
    type: position_controllers/JointTrajectoryController
    joints:
      - body_leg_1
      - leg_1_1_2
      - leg_1_2_3

  leg_2_controller:
    type: position_controllers/JointTrajectoryController
    joints:
      - body_leg_2
      - leg_2_1_2
      - leg_2_2_3

  leg_3_controller:
    type: position_controllers/JointTrajectoryController
    joints:
      - body_leg_3
      - leg_3_1_2
      - leg_3_2_3

  # leg_4_controller:
  #   type: position_controllers/JointTrajectoryController
  #   joints:
  #     - body_leg_4
  #     - leg_4_1_2
  #     - leg_4_2_3

  leg_5_controller:
    type: position_controllers/JointTrajectoryController
    joints:
      - body_leg_5
      - leg_5_1_2
      - leg_5_2_3

dynamixel_control:
  loop_frequency: 100
  cycle_time_error_threshold: 0.02
  baudrate: 1000000 # in bauds
  read_timeout: 0.01 # in seconds
  scan_timeout: 0.005 # in seconds

  # correspondance between hardware IDs of the actuators and their names in ROS
  default_command_interface: position
  servos:
    body_leg_0:
      id: 1
    leg_0_1_2:
      id: 11
    leg_0_2_3:
      id: 21
    body_leg_1:
      id: 2
    leg_1_1_2:
      id: 12
    leg_1_2_3:
      id: 22
    body_leg_2:
      id: 3
    leg_2_1_2:
      id: 13
    leg_2_2_3:
      id: 23
    body_leg_3:
      id: 4
    leg_3_1_2:
      id: 14
    leg_3_2_3:
      id: 24
    # body_leg_4:
    #  id: 5
    # leg_4_1_2:
    #  id: 15
    # leg_4_2_3:
    #  id: 25
    body_leg_5:
      id: 6
    leg_5_1_2:
      id: 16
    leg_5_2_3:
      id: 26
